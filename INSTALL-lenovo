On Lurga:


- download ubuntu-20.04.4-desktop-amd64.iso from ubuntu.com/download/desktop
- download balenaEtcher from balena.io/etcher, unzip and move AppImage to ~/bin
- use balenaEtcher to burn ISO to USB stick, then remove USB stick



on Laptop:
- Setup windows 10 (when asked for MS username, give junk. this will says "oops. something gone wrong" and then allow you to log in with a local ccount)
  o Username "EMC", password "EMC123"
  o Security questions:
     - First pet's name "Smaug"
     - Childhood nickname "Sauron"
     - where di dparents meet "Mordor"

- Reboot, immediately start pressing F2 repeatedly
  Note "Preinstalled OS license" = SDK0R32802 WIN
       "OA3 Key id" = 3560245411056
       "OA2" = N
- Insert USB stick holding Ubuntu 20.04
- Reboot, immediately start pressing F12 repeatedly
  - select USB from list of bootable devices, then "Enter"

- Install Ubuntu
  - On "Updates and other software" page, select:
     - "Minimal installation"
     - "Download updates while installing"
     - "Install third-party software...."
        - Secure boot password "EMC123!!"
  - On "Installation type" page:
     - Select "Erase disk and install  ubuntu"
  - On "Who are you" page:
      - Your name "EMC", username "emc", password "EMC123"
      - Select "Log in automatically"
  - Reboot when complete (remove media when asked to)
     - "Continue boot" when blue "MOK management" screen appears

- Click app grid at bottom left, right-click "Terminal" select
  "Add to favourites"
- sudo visudo -f /etc/sudoers.d/myOverrides
  Add line: "euxton ALL=(ALL:ALL) NOPASSWD: /sbin/poweroff"
- sudo gedit /etc/default/grub
  Remove "quiet" from line: GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"
- sudo update-grub
- Edit /boot/grub/grub.cfg and remove all references to $vt_handoff
- restart
- Click app grid at bottom left, click on "Settings" then "Power"
    - Unselect "dim screen when inactive"
    - Set "Blank screen " to "Never"
    - Click on "Automatic suspend" value deselect "on battery power" and
      deselect "on battery power"

- sudo apt-get install tcsh
- sudo apt-get install libasound2-dev
- sudo apt-get install ncurses-dev
- sudo apt-get install gawk
- sudo apt-get install gcc
- sudo apt-get install make
- sudo apt-get install xmlto
- sudo apt-get install gettext
- sudo apt-get install git

- see https://docs.huihoo.com/pyqt/PyQt4/installation.html for info on building pyqt4
- sudo add-apt-repository ppa:rock-core/qt4
- sudo apt-get update

- sudo apt-get install qt4-qmake
[If /usr/bin/qmake does not then exist, do "ln -s /usr/bin/qmake-qt4 /usr/bin/qmake"]
#- sudo apt-get install libqt4-dev
#- sudo apt-get install libqt4-declarative
- sudo apt-get install fluidsynth
- sudo apt-get install python3-dev
- sudo apt-get install python3-pip
- sudo pip3 install psutil

- wget "https://www.riverbankcomputing.com/static/Downloads/sip/4.19.25/sip-4.19.25.tar.gz"
- tar -xzf sip-4.19.25.tar.gz
- cd sip-4.19.25
- python3 configure.py --sip-module PyQt4.sip
- make
- sudo make install
- cd ..

- wget "https://www.riverbankcomputing.com/static/Downloads/PyQt4/4.12.3/PyQt4_gpl_x11-4.12.3.tar.gz"
- tar -xzf PyQt4_gpl_x11-4.12.3.tar.gz
- rm *.tar.gz
- cd PyQt4_gpl_x11-4.12.3
- edit configure-ng.py - search for '-B' and comment out the two argv.append calls
- python3 configure-ng.py
- make -j 4
- sudo make install

# Get ChurchPlayer and build
- mkdir git
- cd git
- git clone https://github.com/dsberry/churchplayer.git
- cd churchplayer
- git checkout Lenovo
- ./build
- Edit cpmusic.txt to refer to /home/emc/git instead of /home/dsb

- Click "Activities" in top left corner, and search for "startup",
  active "startup applications":
  "Add",   name="ChurchPlayer", command="gnome-terminal -e /home/emc/git/churchplayer/runCP", "Add", "Close"
- chmod a+x churchplayer/runCP




